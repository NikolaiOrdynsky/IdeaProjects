package AleksandrVasko.Collections.SetCollection;

import java.util.Arrays;
import java.util.HashSet;

/*Коллекция, не содержащая повторяющихся элементов. Более формально наборы не содержат пары элементов e1 и e2,
таких что e1.равно(e2), и не более одного нулевого элемента. Как следует из его названия, этот интерфейс моделирует абстракцию математических множеств.
Интерфейс набора устанавливает дополнительные условия, помимо тех, которые унаследованы от интерфейса коллекции,
в контрактах всех конструкторов и в контрактах методов add, equals и хэш-кода.
Объявления для других унаследованных методов также включены здесь для удобства.
(Спецификации, сопровождающие эти объявления, были адаптированы к заданному интерфейсу,
но они не содержат никаких дополнительных условий.)
Дополнительным условием для конструкторов, неудивительно, является то, что все конструкторы должны создавать набор,
не содержащий повторяющихся элементов (как определено выше).Примечание: Необходимо проявлять большую осторожность,
если в качестве элементов набора используются изменяемые объекты. Поведение набора не задается,
если значение объекта изменяется таким образом, что влияет на сравнение равных,
 в то время как объект является элементом набора.
Особым случаем этого запрета является то, что набору недопустимо содержать себя в качестве элемента.
Некоторые реализации наборов имеют ограничения на элементы, которые они могут содержать.
Например, некоторые реализации запрещают нулевые элементы, а некоторые имеют ограничения на типы их элементов.
Попытка добавить недопустимый элемент вызывает непроверенное исключение,
 обычно исключение NullPointerException или исключение ClassCastException.
Попытка запросить наличие недопустимого элемента может вызвать исключение или просто вернуть значение false;
некоторые реализации будут демонстрировать первое поведение, а некоторые-второе.
В более общем плане, попытка выполнить операцию с недопустимым элементом,
завершение которой не приведет к вставке недопустимого элемента в набор, может вызвать исключение или может быть
 выполнена успешно, по выбору реализации.
 Такие исключения помечены как "необязательные" в спецификации для этого интерфейса.*/
public class SetHashSet {
    public static void main(String[] args) {
        String[] array1 = {"vw","audi","skoda","lada"};
        String[] array2 = {"renault","mersedes","ferrari","lada"};
        java.util.Set<String > list = new HashSet<>(Arrays.asList(array1));
        System.out.println(list);
        list.addAll(Arrays.asList(array2));
        System.out.println(list);
    }
}
